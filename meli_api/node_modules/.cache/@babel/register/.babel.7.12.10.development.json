{
  "{\"sourceRoot\":\"D:\\\\Repositorios\\\\MeLi\\\\meli_api\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Repositorios\\\\MeLi\\\\meli_api\",\"filename\":\"D:\\\\Repositorios\\\\MeLi\\\\meli_api\\\\app.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Repositorios\\\\MeLi\\\\meli_api\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Repositorios\\MeLi\\meli_api\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Repositorios\\MeLi\\meli_api",
      "filename": "D:\\Repositorios\\MeLi\\meli_api\\app.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Repositorios\\MeLi\\meli_api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Repositorios\\MeLi\\meli_api\\app.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Repositorios\\MeLi\\meli_api\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Repositorios\\MeLi\\meli_api\\",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar fetch = require(\"node-fetch\");\n\nvar app = (0, _express[\"default\"])();\nvar PORT = process.env.PORT || 8686;\nvar rootUrl = \"https://api.mercadolibre.com/\";\napp.listen(PORT, function () {\n  return console.log(\"Server running at http://localhost:\".concat(PORT, \"/\"));\n});\napp.use(function (req, res, next) {\n  // Website you wish to allow to connect\n  res.setHeader('Access-Control-Allow-Origin', 'http://localhost:3000'); // Request methods you wish to allow\n\n  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE'); // Request headers you wish to allow\n\n  res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With,content-type'); // Set to true if you need the website to include cookies in the requests sent\n  // to the API (e.g. in case you use sessions)\n\n  res.setHeader('Access-Control-Allow-Credentials', true); // Pass to next layer of middleware\n\n  next();\n});\napp.get(\"/api/items\", function (req, res) {\n  try {\n    var query = req.query.q;\n    var urlSearch = rootUrl + \"sites/MLA/search?q=\".concat(query, \"&limit=4&FilterID=category\");\n    fetch(urlSearch).then(function (resp) {\n      return resp.json();\n    }).then(function (response) {\n      var items = response.results.map(function (prod) {\n        return {\n          id: prod.id,\n          title: prod.title,\n          price: {\n            currency: prod.currency_id,\n            amount: Math.floor(prod.price),\n            decimals: 0\n          },\n          picture: prod.thumbnail,\n          condition: prod.condition,\n          free_shipping: prod.shipping.free_shipping,\n          location: prod.address.state_name\n        };\n      });\n      var filters = response.filters.find(function (filter) {\n        return filter.id === \"category\";\n      });\n      var responseArray = {\n        author: getAuthor(),\n        categories: filters ? filters.values[0].path_from_root : [],\n        items: items\n      };\n      res.status(200).send(responseArray);\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  } catch (ex) {\n    console.log(ex);\n  }\n});\napp.get(\"/api/items/:id\", function (req, res) {\n  var id = req.params.id;\n  var urlDetail = rootUrl + \"items/\".concat(id);\n  var urlDetailDescription = urlDetail + \"/description\";\n\n  try {\n    fetch(urlDetail).then(function (resp) {\n      return resp.json();\n    }).then(function (detail) {\n      fetch(urlDetailDescription).then(function (response) {\n        return response.json();\n      }).then(function (detailDescription) {\n        var objResponse = {\n          author: getAuthor(),\n          item: {\n            id: detail.id,\n            title: detail.title,\n            price: {\n              currency: detail.currency_id,\n              amount: Math.floor(detail.price),\n              decimals: Math.floor(detail.price % 1 * 100).toString().padStart(2, \"00\")\n            },\n            picture: detail.pictures ? detail.pictures[0].url : \"\",\n            condition: detail.condition,\n            free_shipping: detail.free_shipping,\n            sold_quantity: detail.sold_quantity,\n            description: detailDescription.plain_text\n          }\n        };\n        res.status(200).send(objResponse);\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  } catch (ex) {\n    console.log(ex);\n  }\n});\n\nfunction getAuthor() {\n  return {\n    name: \"Andrés\",\n    lastname: \"Miretti\"\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "fetch",
        "require",
        "app",
        "PORT",
        "process",
        "env",
        "rootUrl",
        "listen",
        "console",
        "log",
        "use",
        "req",
        "res",
        "next",
        "setHeader",
        "get",
        "query",
        "q",
        "urlSearch",
        "then",
        "resp",
        "json",
        "response",
        "items",
        "results",
        "map",
        "prod",
        "id",
        "title",
        "price",
        "currency",
        "currency_id",
        "amount",
        "Math",
        "floor",
        "decimals",
        "picture",
        "thumbnail",
        "condition",
        "free_shipping",
        "shipping",
        "location",
        "address",
        "state_name",
        "filters",
        "find",
        "filter",
        "responseArray",
        "author",
        "getAuthor",
        "categories",
        "values",
        "path_from_root",
        "status",
        "send",
        "error",
        "ex",
        "params",
        "urlDetail",
        "urlDetailDescription",
        "detail",
        "detailDescription",
        "objResponse",
        "item",
        "toString",
        "padStart",
        "pictures",
        "url",
        "sold_quantity",
        "description",
        "plain_text",
        "name",
        "lastname"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Repositorios\\MeLi\\meli_api\\",
      "sourcesContent": [
        "import express from 'express';\r\nconst fetch = require(\"node-fetch\");\r\nconst app = express();\r\nconst PORT = process.env.PORT || 8686;\r\nconst rootUrl = \"https://api.mercadolibre.com/\";\r\n\r\napp.listen(PORT, () => console.log(`Server running at http://localhost:${PORT}/`));\r\n\r\napp.use(function(req, res, next) {\r\n    // Website you wish to allow to connect\r\n  res.setHeader('Access-Control-Allow-Origin', 'http://localhost:3000');\r\n  \r\n  // Request methods you wish to allow\r\n  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');\r\n  \r\n  // Request headers you wish to allow\r\n  res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With,content-type');\r\n  \r\n  // Set to true if you need the website to include cookies in the requests sent\r\n  // to the API (e.g. in case you use sessions)\r\n  res.setHeader('Access-Control-Allow-Credentials', true);\r\n  \r\n  // Pass to next layer of middleware\r\n  next();\r\n  });\r\n\r\napp.get(\"/api/items\", (req, res) => {\r\n\r\n    try{\r\n        var query = req.query.q;\r\n        const urlSearch = rootUrl + `sites/MLA/search?q=${query}&limit=4&FilterID=category`;\r\n        fetch(urlSearch)\r\n        .then(resp => resp.json())\r\n        .then(response => {\r\n            let items = response.results.map(prod => {\r\n                return {\r\n                    id: prod.id,\r\n                    title: prod.title,\r\n                    price:{\r\n                        currency: prod.currency_id,\r\n                        amount: Math.floor(prod.price),\r\n                        decimals: 0\r\n                    },\r\n                    picture: prod.thumbnail,\r\n                    condition: prod.condition,\r\n                    free_shipping: prod.shipping.free_shipping,\r\n                    location: prod.address.state_name\r\n                }\r\n            });\r\n\r\n            let filters = response.filters.find(filter => filter.id === \"category\");\r\n            let responseArray = {\r\n                author: getAuthor(),\r\n                categories: filters ? filters.values[0].path_from_root : [],\r\n                items\r\n            }\r\n\r\n            res.status(200).send(responseArray);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n    catch(ex){\r\n        console.log(ex);\r\n    }\r\n});\r\n\r\napp.get(\"/api/items/:id\", (req, res) => {\r\n    const { id } = req.params;\r\n    const urlDetail = rootUrl + `items/${id}`;\r\n    const urlDetailDescription = urlDetail + \"/description\";\r\n\r\n    try{\r\n        fetch(urlDetail)\r\n        .then(resp => resp.json())\r\n        .then(detail => {\r\n            fetch(urlDetailDescription)\r\n            .then(response => response.json())\r\n            .then(detailDescription => {\r\n                let objResponse = {\r\n                    author: getAuthor(),\r\n                    item:{\r\n                        id: detail.id,\r\n                        title: detail.title,\r\n                        price:{\r\n                            currency: detail.currency_id,\r\n                            amount: Math.floor(detail.price),\r\n                            decimals: Math.floor(((detail.price % 1) * 100)).toString().padStart(2,\"00\")\r\n                        },\r\n                        picture: detail.pictures ?  detail.pictures[0].url : \"\",\r\n                        condition: detail.condition,\r\n                        free_shipping: detail.free_shipping,\r\n                        sold_quantity: detail.sold_quantity,\r\n                        description: detailDescription.plain_text\r\n                    }\r\n                };\r\n                res.status(200).send(objResponse);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n    catch(ex){\r\n        console.log(ex);\r\n    }\r\n});\r\n\r\nfunction getAuthor() {\r\n    return {\r\n        name: \"Andrés\",\r\n        lastname: \"Miretti\"\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1612556823385
  }
}